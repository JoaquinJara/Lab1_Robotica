/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package manipulador;

import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import com.panamahitek.PanamaHitek_MultiMessage;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.event.MouseInputListener;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;

/**
 *
 * @author Mario
 */
public class Manipulador extends javax.swing.JFrame implements
        MouseInputListener, SerialPortEventListener, KeyListener {
    private static final int PINZA = 0;
    private static final int BASE = 1;
    private static final int BRAZO = 2;
    private static final int ANTEBRAZO = 3;
    
    private PanamaHitek_Arduino arduino = new PanamaHitek_Arduino();
    private PanamaHitek_MultiMessage ino = new PanamaHitek_MultiMessage(4, arduino);
    private JLabel actuales[];
    private JTextField angulos[];
    
    /**
     * Creates new form Vista
     */
    public Manipulador() {
        initComponents();
        crearVista();
        
        try {
            arduino.arduinoRXTX("COM3", 9600, this);
        } catch(ArduinoException ex) {
            Logger.getLogger(Manipulador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void crearVista() {
        String etiquetas[] = new String[] {"Pinza", "Base", "Brazo", "Antebrazo"};
        
        actuales = new JLabel[4];
        angulos = new JTextField[4];
        
        for(int i = 0; i < 4; i++) {
            int y = 40 * i + 10;
            
            JLabel etiqueta = new JLabel(etiquetas[i]);
            etiqueta.setLocation(10, y);
            etiqueta.setSize(80,30);
            this.add(etiqueta);
            
            actuales[i] = new JLabel("0");
            actuales[i].setSize(40,30);
            actuales[i].setLocation(etiqueta.getX() + etiqueta.getWidth() + 10, y);
            this.add(actuales[i]);
            
            angulos[i] = new JTextField("0");
            angulos[i].setSize(60,30);
            angulos[i].setLocation(actuales[i].getX() + actuales[i].getWidth() + 10, y);
            this.add(angulos[i]);
        
            JButton aum = new JButton("+");
            aum.setSize(50,30);
            aum.setLocation(angulos[i].getX() + angulos[i].getWidth() + 10, y);
            aum.setName(i + "+");
            aum.addMouseListener(this);
            this.add(aum);
            
            JButton dism = new JButton("-");
            dism.setSize(50,30);
            dism.setLocation(aum.getX() + aum.getWidth() + 10, y);
            dism.setName(i + "-");
            dism.addMouseListener(this);
            this.add(dism);
            
            JButton set = new JButton("Definir");
            set.setSize(100,30);
            set.setLocation(dism.getX() + dism.getWidth() + 10, y);
            set.setName(i + "s");
            set.addMouseListener(this);
            this.add(set);
        }
        
        JButton controlar = new JButton("Manual");
        controlar.setSize(100, 30);
        controlar.setLocation(10, 170);
        controlar.addKeyListener(this);
        this.add(controlar);
        
        
        JButton esquema = new JButton("Iniciar Esquema");
        esquema.setSize(150, 30);
        esquema.setLocation(150, 170);
        esquema.addMouseListener(this);
        esquema.setName("esquema");
        this.add(esquema);
        
        this.setSize(480, 250);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manipulador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manipulador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manipulador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manipulador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manipulador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private void mover(int parte, int operacion, int angulo) {
        try {
            arduino.sendByte(parte);
            arduino.sendByte(operacion);
            arduino.sendByte(angulo);
            System.out.println(operacion);
            if(operacion != 's' && parte > 1) {
                arduino.sendByte(parte == 2 ? 3 : 2);
                arduino.sendByte(operacion == '+' ? '-' : '+');
                arduino.sendByte(angulo);
            }
        } catch(ArduinoException | SerialPortException ex) {
            Logger.getLogger(Manipulador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    @Override
    public void mouseClicked(MouseEvent e) {
        
        String nombre = e.getComponent().getName();
        System.out.println(nombre);
        if(nombre.equals("esquema")){
            esquema();
            System.out.println("aasdasdds");
        }
        else{
            int parte = nombre.charAt(0) - '0';
            int operacion = nombre.charAt(1);
            int angulo = Integer.parseInt(angulos[parte].getText());
            mover(parte, operacion, angulo);
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {}

    @Override
    public void mouseReleased(MouseEvent e) {}

    @Override
    public void mouseEntered(MouseEvent e) {}

    @Override
    public void mouseExited(MouseEvent e) {}

    @Override
    public void mouseDragged(MouseEvent e) {}

    @Override
    public void mouseMoved(MouseEvent e) {}

    @Override
    public void serialEvent(SerialPortEvent spe) {
        try {
            if(arduino.isMessageAvailable()) {
                String angulos[] = arduino.printMessage().split(",");
                if(angulos.length == 4)
                    for(int i = 0; i < 4; i++)
                        actuales[i].setText(angulos[i] + "Â°");
            }
        } catch(ArduinoException | SerialPortException ex) {
            Logger.getLogger(Manipulador.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void keyTyped(KeyEvent e) {}

    @Override
    public void keyPressed(KeyEvent e) {
        System.out.println("TECLA PRESIONADA");
        int parte = -1, operacion = '+', angulo = 5;
        switch(e.getKeyCode()) {
            case KeyEvent.VK_DOWN:
            case KeyEvent.VK_S:
                operacion = '-';
            case KeyEvent.VK_UP:
            case KeyEvent.VK_W:
                parte = 3;
                break;
            case KeyEvent.VK_RIGHT:
            case KeyEvent.VK_D:
                operacion = '-';
            case KeyEvent.VK_LEFT:
            case KeyEvent.VK_A:
                parte = 1;
                break;
            case KeyEvent.VK_X:
                operacion = '-';
            case KeyEvent.VK_Z:
                parte = 0;
                angulo = 50;
                break;
        }
        
        if(parte > -1) mover(parte, operacion, angulo);
    }

    @Override
    public void keyReleased(KeyEvent e) {}
    
    
    void movLentoVar(int parte, int func,int angulo,int vel){
        try{
            for(int i=0;i<vel;i++){
            mover(parte,func,angulo/vel);
            Thread.sleep(1000/vel);}
            
        }
        catch(Exception e){
            
        }   
    }
    
   /* void movLentoFijo(int parte,int angulo){
        try{
            for
            
        }catch(Exception e{
            
        }
    }*/
    
    void tomarObjeto(){
        try{
            mover(PINZA,'+',50);
            Thread.sleep(1000);
            movLentoVar(BRAZO,'+',50,20);
            movLentoVar(ANTEBRAZO,'-',30,20);
           
            mover(PINZA,'-',50);
            Thread.sleep(1000);
            movLentoVar(BRAZO,'-',50,5);
            movLentoVar(ANTEBRAZO,'+',20,10);
            Thread.sleep(2000);
        }catch(Exception e){   
        }   
    }
    
    void dejarObjeto(){
        try{
            movLentoVar(BRAZO,'+',40,20);
            movLentoVar(ANTEBRAZO,'-',20,20);
            
            mover(PINZA,'+',50);
            Thread.sleep(1000);
            movLentoVar(BRAZO,'-',40,10);
            movLentoVar(ANTEBRAZO,'+',15,10);
            }catch(Exception e){   
        }
    }
    
    void gotoObjeto(int from,int to){
        int k=0;
        try{
            switch (to) {
                case 1:
                    k=0;
                    for (int j=k;j>0;j-=5){
                    mover(BASE,'s',j);
                    Thread.sleep(50);}
                    break;
                case 2:
                    k=160;
                    for (int j=k;j>30;j-=5){
                    mover(BASE,'s',j);
                    Thread.sleep(50);}
                    break;
                case 3:
                    k=160;
                    for (int j=k;j>60;j-=5){
                    mover(BASE,'s',j);
                    Thread.sleep(50);}
                    break;
                case 4:
                    
                    if(from==1) k=0;
                    else if(from==2) k=30;
                    else if (from==3) k=60;
                    for (int j=k;j<160;j+=5){
                    mover(BASE,'s',j);
                    Thread.sleep(50);}
                    break;
                default:
                    break;
            }
            
            Thread.sleep(1000);
        }catch(Exception e){   
        }
    }
    
    public void esquema(){
                
        try{
            
            //recoger objeto
            gotoObjeto(0,1);
            tomarObjeto();
            gotoObjeto(1,4);
            dejarObjeto();
            
            gotoObjeto(4,2);
            tomarObjeto();
            gotoObjeto(2,4);
            dejarObjeto();
            
            gotoObjeto(4,3);
            tomarObjeto();
            gotoObjeto(3,4);
            dejarObjeto();
            
        }catch(Exception e){
            
        }
        
        
    }
}
